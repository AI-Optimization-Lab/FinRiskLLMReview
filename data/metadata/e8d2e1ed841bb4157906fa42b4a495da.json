{
  "id": 4,
  "title": "APPLICATION OF MACHINE LEARNING: AN ANALYSIS OF ASIAN OPTIONS PRICING USING NEURAL NETWORK",
  "abstract": "Pricing Asian Option is imperative to researchers, analysts, traders and any other related experts involved in the option trading markets and the academic field. Not only trading highly affected by the accuracy of the price of Asian options but also portfolios that involve hedging of commodity. Several attempts have been made to model the Asian option prices with closed-form over the past twenty years such as the Kemna-Vorst Model and Levy Approximation. Although today the two closed-form models are still widely used, their accuracy and reliability are called into question. The reason is simple; the Kemna-Vorst model is derived with an assumption of geometric mean of the stocks. In practice, Average Priced Options are mostly arithmetic and thus always have a volatility high than the volatility of a geometric mean making the Asian options always underpriced. On the other hand, the Levy Approximation using Monte Carlo Simulation as a benchmark, do not perform well when the product of the sigma (volatility) and square root maturity of the underlying is larger than 0.2. When the maturity of the option enlarges, the performance of the Levy Approximation largely deteriorates. If the closed-form models could be improved, higher frequency trading of Asian option will become possible. Moreover, building neural networks for different contracts of Asian Options allows reuse of computed prices and large-scale portfolio management that involves many contracts. In this thesis, we use Neural Network to fill the gap between the price of a closed-form model and that of an Asian option. The significance of this method answers two interesting questions. First, could an Asian option trader with a systematic behavior in pricing learned from previous quotes improve his pricing or trading performance in the future? Second, will a training set of previous data help to improve the performance of a financial model? We perform two simulation experiments and show that the performance of the closed-form model is significantly improved. Moreover, we extend the learning process to real data quote. The use of Neural Network highly improves the accuracy of the traditional closed-form model. The model's original price is not so much accurate as what we estimate using Neural network and could not capture the high volatility effectively; still, it provides a relative reasonable fit to the problem (Especially the Levy Model). The analysis shows that the Neural Network Algorithms we used affect the results significantly.",
  "year": 2017,
  "source": "WOS",
  "area": "derivatives_pricing",
  "method": "machine learning",
  "keywords": [
    "machine learning",
    "supervised learning",
    "unsupervised learning",
    "reinforcement learning",
    "semi-supervised learning",
    "active learning",
    "classification",
    "regression",
    "PCA",
    "support vector machine",
    "SVM",
    "decision tree",
    "clustering",
    "principal components analysis",
    "manifold learning",
    "feature learning",
    "feature representation",
    "neural network",
    "deep learning",
    "representation learning",
    "backpropagation",
    "BP",
    "rectified linear unit",
    "ReLU",
    "sigmoid",
    "tanh",
    "hidden layer",
    "convolutional neural network",
    "CNN",
    "recurrent neural network",
    "long short-term memory",
    "LSTM",
    "sequence-to-sequence learning",
    "seq2seq",
    "encoder-decoder",
    "autoencoder",
    "denoising autoencoder",
    "deep belief network",
    "DBM",
    "restricted Boltzmann machine",
    "dropout regularization",
    "unsupervised pre-train",
    "memory network",
    "attention mechanism",
    "Large Language Model",
    "LLM",
    "In-context Learning",
    "Instruction Tuning",
    "Chain-of-Thought",
    "Few-shot Learning",
    "Zero-shot Learning",
    "Long Context Modeling",
    "Tool Manipulation",
    "Tool-augmented Model",
    "Memory Augmented Model",
    "ChatGPT",
    "GPT-4",
    "LLaMA"
  ],
  "cache_key": "e8d2e1ed841bb4157906fa42b4a495da",
  "timestamp": "2025-05-15T01:27:29.392267"
}