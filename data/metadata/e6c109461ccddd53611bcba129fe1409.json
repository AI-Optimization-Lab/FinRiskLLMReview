{
  "id": 2625,
  "title": "Assessing portfolio diversification via two-sample graph kernel inference. A case study on the influence of ESG screening",
  "abstract": "In this work we seek to enhance the frameworks practitioners in asset management and wealth management may adopt to asses how different screening rules may influence the diversification benefits of portfolios. The problem arises naturally in the area of Environmental, Social, and Governance (ESG) based investing practices as practitioners often need to select subsets of the total available assets based on some ESG screening rule. Once a screening rule is identified, one constructs a dynamic portfolio which is usually compared with another dynamic portfolio to check if it satisfies or outperforms the risk and return profile set by the company. Our study proposes a novel method that tackles the problem of comparing diversification benefits of portfolios constructed under different screening rules. Each screening rule produces a sequence of graphs, where the nodes are assets and edges are partial correlations. To compare the diversification benefits of screening rules, we propose to compare the obtained graph sequences. The method proposed is based on a machine learning hypothesis testing framework called the kernel two-sample test whose objective is to determine whether the graphs come from the same distribution. If they come from the same distribution, then the risk and return profiles should be the same. The fact that the sample data points are graphs means that one needs to use graph testing frameworks. The problem is natural for kernel two-sample testing as one can use so-called graph kernels to work with samples of graphs. The null hypothesis of the two-sample graph kernel test is that the graph sequences were generated from the same distribution, while the alternative is that the distributions are different. A failure to reject the null hypothesis would indicate that ESG screening does not affect diversification while rejection would indicate that ESG screening does have an effect. The article describes the graph kernel two-sample testing framework, and further provides a brief overview of different graph kernels. We then demonstrate the power of the graph two-sample testing framework under different realistic scenarios. Finally, the proposed methodology is applied to data within the SnP500 to demonstrate the workflow one can use in asset management to test for structural differences in diversification of portfolios under different ESG screening rules.",
  "year": 2024,
  "source": "WOS",
  "area": "portfolio",
  "method": "machine learning",
  "keywords": [
    "machine learning",
    "supervised learning",
    "unsupervised learning",
    "reinforcement learning",
    "semi-supervised learning",
    "active learning",
    "classification",
    "regression",
    "PCA",
    "support vector machine",
    "SVM",
    "decision tree",
    "clustering",
    "principal components analysis",
    "manifold learning",
    "feature learning",
    "feature representation",
    "neural network",
    "deep learning",
    "representation learning",
    "backpropagation",
    "BP",
    "rectified linear unit",
    "ReLU",
    "sigmoid",
    "tanh",
    "hidden layer",
    "convolutional neural network",
    "CNN",
    "recurrent neural network",
    "long short-term memory",
    "LSTM",
    "sequence-to-sequence learning",
    "seq2seq",
    "encoder-decoder",
    "autoencoder",
    "denoising autoencoder",
    "deep belief network",
    "DBM",
    "restricted Boltzmann machine",
    "dropout regularization",
    "unsupervised pre-train",
    "memory network",
    "attention mechanism",
    "Large Language Model",
    "LLM",
    "In-context Learning",
    "Instruction Tuning",
    "Chain-of-Thought",
    "Few-shot Learning",
    "Zero-shot Learning",
    "Long Context Modeling",
    "Tool Manipulation",
    "Tool-augmented Model",
    "Memory Augmented Model",
    "ChatGPT",
    "GPT-4",
    "LLaMA"
  ],
  "cache_key": "e6c109461ccddd53611bcba129fe1409",
  "timestamp": "2025-05-15T01:08:41.968021"
}