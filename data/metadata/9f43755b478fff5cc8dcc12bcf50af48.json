{
  "id": 4280,
  "title": "Laboratory information management software for engineered mini-protein therapeutic workflow",
  "abstract": "BackgroundProtein based therapeutics are one of the fastest growing classes of novel medical interventions in areas such as cancer, infectious disease, and inflammation. Protein engineering plays an important role in the optimization of desired therapeutic properties such as reducing immunogenicity, increasing stability for storage, increasing target specificity, etc. One category of protein therapeutics is nature-inspired bioengineered cystine-dense peptides (CDPs) for various biological targets. These engineered proteins are often further modified by synthetic chemistry. For example, candidate mini-proteins can be conjugated into active small molecule drugs. We refer to modified mini-proteins as Optides (Optimized peptides). To efficiently serve the multidisciplinary lab scientists with varied therapeutic portfolio research goals in a non-commercial setting, a cost effective extendable laboratory information management system (LIMS) is/was needed.ResultsWe have developed a LIMS named Optide-Hunter for a generalized engineered protein compounds workflow that tracks entities and assays from creation to preclinical experiments. The implementation and custom modules are built using LabKey server, which is an Open Source platform for scientific data integration and analysis. Optide-Hunter contains a compound registry, in-silico assays, high throughput production, large-scale production, in vivo assays and data extraction from a specimen-tracking database. It is used to store, extract, and view data for various therapeutics projects. Optide-Hunter also includes external processing stand-alone software (HPLCPeakClassifierApp) for automated chromatogram classification. The HPLCPeakClassifierApp is used for pre-processing of HPLC data prior to loading to Optide-Hunter. The custom implementation is done using data transformation modules in R, SQL, javascript, and java and is Open Source to assist new users in customizing it for their unique workflows. Instructions for exploring a deployed version of Optide-Hunter can be found at https://www.labkey.com/case%20study/optide-hunterConclusionThe Optide-Hunter LIMS system is designed and built to track the process of engineering, producing and prioritizing protein therapeutic candidates. It can be easily adapted and extended for use in small or large research laboratories where multidisciplinary scientists are collaborating to engineer compounds for potential therapeutic or protein science applications. Open Source exploration of Optide-Hunter can help any bioinformatics scientist adapt, extend, and deploy an equivalent system tailored to each laboratory's workflow.",
  "year": 2019,
  "source": "WOS",
  "area": "portfolio",
  "method": "machine learning",
  "keywords": [
    "machine learning",
    "supervised learning",
    "unsupervised learning",
    "reinforcement learning",
    "semi-supervised learning",
    "active learning",
    "classification",
    "regression",
    "PCA",
    "support vector machine",
    "SVM",
    "decision tree",
    "clustering",
    "principal components analysis",
    "manifold learning",
    "feature learning",
    "feature representation",
    "neural network",
    "deep learning",
    "representation learning",
    "backpropagation",
    "BP",
    "rectified linear unit",
    "ReLU",
    "sigmoid",
    "tanh",
    "hidden layer",
    "convolutional neural network",
    "CNN",
    "recurrent neural network",
    "long short-term memory",
    "LSTM",
    "sequence-to-sequence learning",
    "seq2seq",
    "encoder-decoder",
    "autoencoder",
    "denoising autoencoder",
    "deep belief network",
    "DBM",
    "restricted Boltzmann machine",
    "dropout regularization",
    "unsupervised pre-train",
    "memory network",
    "attention mechanism",
    "Large Language Model",
    "LLM",
    "In-context Learning",
    "Instruction Tuning",
    "Chain-of-Thought",
    "Few-shot Learning",
    "Zero-shot Learning",
    "Long Context Modeling",
    "Tool Manipulation",
    "Tool-augmented Model",
    "Memory Augmented Model",
    "ChatGPT",
    "GPT-4",
    "LLaMA"
  ],
  "cache_key": "9f43755b478fff5cc8dcc12bcf50af48",
  "timestamp": "2025-05-15T01:25:23.351394"
}